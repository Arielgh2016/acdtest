PROCEDURE "verificaReemplazaStockCentralArribos" (
    IN icountry NVARCHAR(6),
    IN isku NVARCHAR(15),
    IN icodcolor NVARCHAR(10),
    IN iperiodo NVARCHAR(7),
    IN imes NVARCHAR(2),
    IN ianio NVARCHAR(4),
    IN idealer_id NVARCHAR(12),
    IN iusuario NVARCHAR(200),
    IN iseleccionaIDNSAM NVARCHAR(20),
    IN iseleccionaIDORDENDP NVARCHAR(20),
    IN iseleccionaEIM NVARCHAR(18),
    in iConStock BOOLEAN,
    OUT message NVARCHAR(5000),
    OUT result BOOLEAN
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
AS
BEGIN
    DECLARE nsam_id VARCHAR(100);
    DECLARE fecha_actual SECONDDATE;
    DECLARE eim VARCHAR(18);
    DECLARE periodoTomada NVARCHAR(7);
    DECLARE estatus BOOLEAN;
    DECLARE monthTomada NVARCHAR(2);
    DECLARE dayTomada NVARCHAR(2);
    DECLARE yearTomada NVARCHAR(4);
    DECLARE formatted_date NVARCHAR(8);
    DECLARE lv_count_unidades_asignadas INTEGER;
    DECLARE CURSOR oResponseSKU_DETAILS_VerificaStock FOR SELECT SD.eim FROM DP_CL_N3_SKU_DETAILS SD WHERE SD.country = :icountry AND SD.sku = :isku ORDER BY SD.distribution_order ASC;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        message = 'SQL Exception occured. Error Code is: ' || ::SQL_ERROR_CODE || ' Error message is: ' || ::SQL_ERROR_MESSAGE;
        result = false;
    END;

    CREATE LOCAL TEMPORARY COLUMN TABLE #TMP_UNIDADES_ASIGNADAS_VERIFICA (
        ID_ORDER_VP_NSAM NVARCHAR(20),
        ASSIGNMENT_PERIOD NVARCHAR(7),
        EIM NVARCHAR(18),
        IDORDENDP NVARCHAR(20)
    );

    IF (:iConStock = true) THEN

        FOR unidades as oResponseSKU_DETAILS_VerificaStock
        DO

            INSERT INTO #TMP_UNIDADES_ASIGNADAS_VERIFICA TMP (TMP.ID_ORDER_VP_NSAM,TMP.ASSIGNMENT_PERIOD,TMP.EIM,TMP.IDORDENDP)
            SELECT MP.ID_ORDER_VP_NSAM, MP.ASSIGNMENT_PERIOD, MP.EIM, ''
            FROM DP_CL_N3_MAESTROPRODUCCION MP
            INNER JOIN DP_CL_N3_SKU_DETAILS SD ON SD.eim = MP.EIM
                                          AND SD.country = MP.COUNTRY
                                          AND SD.sku = :isku
            WHERE MP.COUNTRY = :icountry
            AND SD.EIM = unidades.eim
            AND (MP.BLOQUEADO is null OR  MP.BLOQUEADO = '')
            AND MP.STOCK_PISO = 'X'          
            AND MP.STATUS_VEHICLE = '01'
            AND MP.EXTERIOR_COLOR_CODE = :icodcolor
            AND MP.ID_ORDER_VP_NSAM NOT IN (SELECT DA.ID_ORDER_VP_NSAM FROM DP_CL_N3_DETALLEASIGNACION DA WHERE DA.COUNTRY = :icountry AND DA.CODESTADOASIGNACION = 1)
            ORDER BY MP.ID_ORDER_VP_NSAM ASC;

        END FOR;

    END IF;

    SELECT COUNT(*) INTO lv_count_unidades_asignadas FROM #TMP_UNIDADES_ASIGNADAS_VERIFICA;

    IF (lv_count_unidades_asignadas > 0) THEN

        SELECT tmp.ID_ORDER_VP_NSAM, tmp.EIM, tmp.ASSIGNMENT_PERIOD INTO nsam_id, eim, periodoTomada
        FROM (
            SELECT ID_ORDER_VP_NSAM, EIM, ASSIGNMENT_PERIOD, ROW_NUMBER() OVER () AS row_num
            FROM #TMP_UNIDADES_ASIGNADAS_VERIFICA -- Asegúrate de que el nombre de la tabla sea correcto
        ) AS tmp
        WHERE row_num = 1
        LIMIT 1;

        fecha_actual := CAST(CURRENT_TIMESTAMP AS SECONDDATE);

        INSERT INTO DP_CL_N3_DETALLEASIGNACION DA (DA.IDORDENDP,DA.ID_ORDER_VP_NSAM,DA.COUNTRY,DA.EIM,DA.CODCANAL,DA.SKU,DA.MES,DA.ANIO,DA.DEALER_ID,DA.FECHA_ASIG,DA.USUARIO,DA.CODESTADOASIGNACION,DA.IS_FREEDEMAND0,DA.FECHA_MODIFICACION,DA.OBSERVACION,DA.CODCOLOR,DA.TIPO_ASIG,DA.ID_ORDER_VP_NSAM_ANTE)
        VALUES(:iseleccionaIDORDENDP,:nsam_id,:icountry,:eim,'10',:isku,:imes,:ianio,:idealer_id,:fecha_actual,:iusuario,1,null,:fecha_actual,'Unidad reemplazada id_sam: '|| :iseleccionaIDNSAM || ' por id_sam:' || :nsam_id,null,'A',:iseleccionaIDNSAM);

        -- Obtener la fecha actual
        formatted_date := '' || LPAD(TO_VARCHAR(MONTH(current_date), '99'), 2, '0') || '-' || TO_VARCHAR(YEAR(current_date), '9999');
        -- Actualiza el id_sam de maestro producción
        UPDATE DP_CL_N3_MAESTROPRODUCCION MP SET MP.DEALER_ID = :idealer_id, MP.DATE_ASSIGNMENT = :formatted_date, MP.CODCANAL = '10', MP.SKU = :isku
        WHERE MP.ID_ORDER_VP_NSAM = :nsam_id AND MP.ASSIGNMENT_PERIOD = :periodoTomada AND MP.EIM = :eim AND MP.COUNTRY = :icountry;
        -- Actualiza el id_sam eliminado del detalleAsignación de maestro producción
        UPDATE DP_CL_N3_MAESTROPRODUCCION MP SET MP.DEALER_ID = null, MP.DATE_ASSIGNMENT = null, MP.CODCANAL = null, MP.SKU = null
        WHERE MP.ID_ORDER_VP_NSAM = :iseleccionaIDNSAM AND MP.EIM = iseleccionaEIM AND MP.COUNTRY = :icountry;
        -- Elimina el registro actualizado por otro id_nsam
        DELETE FROM DP_CL_N3_DETALLEASIGNACION DDA WHERE DDA.IDORDENDP = iseleccionaIDORDENDP AND DDA.ID_ORDER_VP_NSAM = iseleccionaIDNSAM AND DDA.country = icountry;

        message := 'Procedimiento ok : ' || :lv_count_unidades_asignadas;
        estatus := true;
    ELSE
        message := 'Procedimiento nok : ' || :lv_count_unidades_asignadas;
        estatus := false;
    END IF;

    DROP TABLE #TMP_UNIDADES_ASIGNADAS_VERIFICA;

    message := message;
    result := estatus;

END;