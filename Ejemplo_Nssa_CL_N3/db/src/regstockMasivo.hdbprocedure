PROCEDURE "regstockmasivo" (
    IN country NVARCHAR(10),
    IN accion NVARCHAR(1),
    IN vin TT_VIN,
    OUT retorno TT_RESPONSESTOCK)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
AS

BEGIN
    
    DECLARE lv_count INTEGER;
    DECLARE sys BOOLEAN;
    DECLARE msg NVARCHAR(5000);
    DECLARE lv_accion NVARCHAR(1);
    DECLARE affected_rows INTEGER; 
    DECLARE CURSOR my_cursor FOR SELECT VIN FROM :vin;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            DROP TABLE #TMP_VINES;
          --message = 'SQL Exception occured. Error Code is: ' || ::SQL_ERROR_CODE || ' Error message is: ' || ::SQL_ERROR_MESSAGE;
          --result = false;
        END;

        CREATE LOCAL TEMPORARY COLUMN TABLE #TMP_VINES (
            VIN NVARCHAR(17),
            MSG NVARCHAR(5000),
            RESULT BOOLEAN        
        );

        DELETE FROM #TMP_VINES;

        FOR item AS my_cursor
        DO
            IF (:accion = 'X') THEN
                lv_accion := 'X';
            ELSE
                lv_accion := NULL;
            END IF;

            UPDATE DP_CL_N3_MAESTROPRODUCCION
            SET STOCK_PISO = :lv_accion
            WHERE VIN_CODE = :item.VIN
            AND COUNTRY = :country;

            -- Verificar si la actualizaciÃ³n fue exitosa
            affected_rows = ::ROWCOUNT;

            -- Devolver true si se afectaron filas, de lo contrario false
            IF affected_rows > 0 THEN
                INSERT INTO #TMP_VINES (VIN,MSG,RESULT)VALUES(item.VIN,'VIN encontrado y actualizado',true);
            ELSE
                INSERT INTO #TMP_VINES (VIN,MSG,RESULT)VALUES(item.VIN,'VIN no encontrado',false);
            END IF;
    
        END FOR;        

        retorno = SELECT * FROM #TMP_VINES;

        DROP TABLE #TMP_VINES;
END;