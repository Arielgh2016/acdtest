PROCEDURE "sync_facturasdp" (
    IN country NVARCHAR(10),
    --OUT message NVARCHAR(5000),
    --OUT result Boolean,
	OUT procesados TT_UNIDADESPROCESADAS
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
AS
BEGIN
	DECLARE message NVARCHAR(5000);
	DECLARE result Boolean;
    DECLARE lvcountry NVARCHAR(5);
	DECLARE lv_vin NVARCHAR(20);
	DECLARE lv_documento NVARCHAR(20);
	DECLARE id_nsam NVARCHAR(20);
	DECLARE RecordCount INT;
	DECLARE totDocu INT;
	DECLARE num_sec INTEGER;
	DECLARE indice_nsam NVARCHAR(20);
	DECLARE fecha_actual SECONDDATE;
	DECLARE orderId VARCHAR(20);
	DECLARE country_vin NVARCHAR(17);
	DECLARE lv_sku NVARCHAR(15);
	DECLARE EIM NVARCHAR(18);
	DECLARE lv_canal NVARCHAR(10);
	DECLARE periodo VARCHAR(7);
	DECLARE lv_mes VARCHAR(2);
	DECLARE lv_anio	VARCHAR(4);
	DECLARE dealer_doc NVARCHAR(12);
	DECLARE dealer_rev NVARCHAR(12);
	DECLARE facturado NVARCHAR(1);
	DECLARE num_factura NVARCHAR(30);
	DECLARE des_documento NVARCHAR(60);
	DECLARE fec_factura NVARCHAR(24);
	DECLARE id_dp NVARCHAR(20);
	DECLARE id_canal INTEGER;
	DECLARE lv_clasedocu NVARCHAR(5);
	DECLARE fecha_creacion_nsam NVARCHAR(8);
	DECLARE formatted_date NVARCHAR(8);
	
	DECLARE CURSOR mycur FOR SELECT VIN FROM DP_CL_N3_DOCUMENTOS WHERE COUNTRY = :country and PROCESADO IS NULL  GROUP BY VIN;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
          message = 'SQL Exception occured. Error Code is: ' || ::SQL_ERROR_CODE || ' Error message is: ' || ::SQL_ERROR_MESSAGE;
          result = false;
   		END;

		
	CREATE LOCAL TEMPORARY COLUMN TABLE #TMP_DOCUMENTOS(
		COUNTRY NVARCHAR(10),
		VIN NVARCHAR(17),
		NUM_DOCUMENTO NVARCHAR(20),
		CLASE_DOCUMENTO NVARCHAR(5),
		DES_DOCUMENTO NVARCHAR(60),
	    FEC_DOCUMENTO SECONDDATE,
	    DEALER_DOCU NVARCHAR(12),
	    CANAL_VENTA NVARCHAR(10),
	    PROCESADO NVARCHAR(1),
	    FECHA_REGISTRO DATE
	);
	
	CREATE LOCAL TEMPORARY COLUMN TABLE #TMP_MAESTRO(
		VIN_CODE NVARCHAR(20)
	);
	
	CREATE LOCAL TEMPORARY COLUMN TABLE #TMP_DETALLEASIG(
		IDORDENDP	NVARCHAR(20),
		COUNTRY		NVARCHAR(17),
		DEALER_ID	NVARCHAR(12),
		CODCANAL	INTEGER
	);
	
	CREATE LOCAL TEMPORARY COLUMN TABLE #TMP_RESULTADOPROCESO(
		ID_ORDER_VP_NSAM			NVARCHAR(20),
		IDORDENDP					NVARCHAR(20),
		CANAL	    				NVARCHAR(5),
		COUNTRY						NVARCHAR(17),
		DEALER_ID					NVARCHAR(12) ,
		MES				    		NVARCHAR(2) ,
		ANIO						NVARCHAR(4),
		NUM_DOCUMENTO				NVARCHAR(20),
		CLASE_DOCUMENTO     		NVARCHAR(5),
		DES_DOCUMENTO       		NVARCHAR(60),
		FEC_DOCUMENTO       		SECONDDATE,
		DATE_CREATION_ORDER_VP_NSAM NVARCHAR(8)
	);
	
	formatted_date := '' || LPAD(TO_VARCHAR(MONTH(current_date), '99'), 2, '0') || '-' || TO_VARCHAR(YEAR(current_date), '9999');
	totDocu = 0;
	FOR documentos AS mycur DO
		totDocu = totDocu + 1;
		lv_vin := documentos.VIN;
		
		--SELECT lv_vin  AS VIN FROM DUMMY;
		
		DELETE FROM #TMP_DOCUMENTOS;
		--CONSULTA EL ULTIMO DOCUMENTO DEL VIN
		INSERT INTO #TMP_DOCUMENTOS(COUNTRY, VIN, NUM_DOCUMENTO, CLASE_DOCUMENTO, DES_DOCUMENTO, FEC_DOCUMENTO, DEALER_DOCU, CANAL_VENTA, PROCESADO, FECHA_REGISTRO)
					SELECT TOP 1
						COUNTRY,
						VIN,
						NUM_DOCUMENTO,
						CLASE_DOCUMENTO,
						DES_DOCUMENTO,
						FEC_DOCUMENTO,
						DEALER_ID,
						CANAL_VENTA,
						PROCESADO,
						FECHA_REGISTRO
					FROM DP_CL_N3_DOCUMENTOS
					WHERE VIN = :lv_vin
					ORDER BY FEC_DOCUMENTO DESC;
				
		--SELECT * FROM #TMP_DOCUMENTOS;
					
	    --CHEQUEAR SI EL VIN EXISTE EN LA TABLA MAESTRO
		SELECT ID_ORDER_VP_NSAM, COUNTRY, EIM, ASSIGNMENT_PERIOD, DATE_CREATION_ORDER_VP_NSAM INTO id_nsam, country_vin, eim, periodo, fecha_creacion_nsam
		       FROM DP_CL_N3_MAESTROPRODUCCION
		       WHERE VIN_CODE = :lv_vin
		       LIMIT 1;
		       
	    
		--SELECT id_nsam AS id_nsam FROM DUMMY;
		
		IF ( id_nsam != '' ) THEN
			
			DELETE FROM #TMP_DETALLEASIG;

			INSERT INTO #TMP_DETALLEASIG(IDORDENDP, COUNTRY, DEALER_ID, CODCANAL)
			SELECT IDORDENDP, COUNTRY, DEALER_ID, CODCANAL 
				FROM DP_CL_N3_DETALLEASIGNACION
				WHERE ID_ORDER_VP_NSAM = :id_nsam
				AND CODESTADOASIGNACION = 1;
				
			
			SELECT COUNT(*) INTO RecordCount 
		    FROM #TMP_DETALLEASIG;
		    
		    SELECT CLASE_DOCUMENTO into lv_clasedocu FROM #TMP_DOCUMENTOS;
    		
    		--SELECT RecordCount AS RecordCount FROM DUMMY;
    		
    		--NO TIENE RESERVA POR LO TANTO SE CREA LA ASIGNACIÓN AUTOMATICA DE LA UNIDAD 
		    IF ( RecordCount = 0 ) THEN
		        
		        IF (lv_clasedocu = 'M') THEN -- TIPO DE DOCUMENTO FACTURA
		        
			       --SELECT 'La tabla temporal está vacía' AS MSG_det  FROM DUMMY;
			        
			       num_sec := CEILING(RAND() * 900) + 100;
			       indice_nsam := SUBSTR(id_nsam, LENGTH(:country_vin) + 3);
			       orderId := 'DP' || indice_nsam || num_sec;
			       fecha_actual := CAST(CURRENT_TIMESTAMP AS SECONDDATE);
				   
				   --SELECT eim AS eim FROM DUMMY;
				   
				   SELECT SKU INTO lv_sku
				   FROM DP_CL_N3_SKU_DETAILS WHERE eim = :eim
	                                         AND country = :country_vin;
	               
	               
	               --SELECT lv_sku AS lv_sku FROM DUMMY;
	               
	                SELECT CANAL_VENTA into lv_canal FROM #TMP_DOCUMENTOS;
	                SELECT DEALER_DOCU into dealer_doc FROM #TMP_DOCUMENTOS;
	                
	                facturado = 'X';
	                SELECT NUM_DOCUMENTO into num_factura FROM #TMP_DOCUMENTOS;
	                SELECT FEC_DOCUMENTO into fec_factura FROM #TMP_DOCUMENTOS;
					SELECT DES_DOCUMENTO into des_documento FROM #TMP_DOCUMENTOS;
					
	                
	                lv_mes := SUBSTRING(periodo, 1, 2);
	                lv_anio := SUBSTRING(periodo, 4, 4);
	                                                
	                --SELECT orderId AS orderId FROM DUMMY;
	                
	                --Crea el registro de detalle
			        INSERT INTO DP_CL_N3_DETALLEASIGNACION (IDORDENDP,ID_ORDER_VP_NSAM,COUNTRY,EIM,CODCANAL,SKU,MES,ANIO,DEALER_ID,FECHA_ASIG,USUARIO,CODESTADOASIGNACION,IS_FREEDEMAND0,FECHA_MODIFICACION,OBSERVACION,CODCOLOR,TIPO_ASIG, FACTURADO, NUM_FACTURADO, FEC_FACTURADO)
			        VALUES(:orderId,:id_nsam,:country_vin,:eim, :lv_canal,:lv_sku,:lv_mes,:lv_anio,:dealer_doc,:fecha_actual, 'SYNC FACTURA',1,null,:fecha_actual,'Unidad asignada en: '|| :periodo,null,'F', facturado, num_factura, fec_factura);
	    			
	    			
	    			INSERT INTO #TMP_RESULTADOPROCESO(ID_ORDER_VP_NSAM, IDORDENDP, CANAL, COUNTRY, DEALER_ID, MES, ANIO, NUM_DOCUMENTO, CLASE_DOCUMENTO, DES_DOCUMENTO, FEC_DOCUMENTO, DATE_CREATION_ORDER_VP_NSAM)
	    				   VALUES (:id_nsam, :orderId, :lv_canal, :country_vin, :dealer_doc, :lv_mes, :lv_anio, :num_factura, :lv_clasedocu, :des_documento, :fec_factura, :fecha_creacion_nsam);
	
	    			--Actualiza tabla de documentos como procesado
	    			UPDATE DP_CL_N3_DOCUMENTOS
					SET observacion = 'SE CREA LA RESERVA DESDE FACTURACION, ORDEN NSAM: ' || :id_nsam,
					    procesado = 'X'
					WHERE vin = :lv_vin
					AND num_documento = :num_factura;

					UPDATE DP_CL_N3_DOCUMENTOS
					SET procesado = 'X'
					WHERE vin = :lv_vin
					AND num_documento <> :num_factura;

					--Actualiza maestro de produccion
					UPDATE DP_CL_N3_MAESTROPRODUCCION
							SET STATUS_VEHICLE = '04',
							DEALER_ID = dealer_doc, 
							DATE_ASSIGNMENT = formatted_date,
							CODCANAL = lv_canal,
							SKU = lv_sku
							WHERE ID_ORDER_VP_NSAM = :id_nsam;
							
				ELSE -- NOTA DE CREDITO, SE REGISTRA UNIDAD POR NOTA  DE CRÉDITO
					
					UPDATE DP_CL_N3_DOCUMENTOS
					SET observacion = 'SE REGISTRA UNIDAD POR NOTA DE CRÉDITO, ORDEN NSAM: ' || :id_nsam,
					    procesado = 'X'
					WHERE vin = :lv_vin
					AND num_documento = :num_factura;

					UPDATE DP_CL_N3_DOCUMENTOS
					SET procesado = 'X'
					WHERE vin = :lv_vin
					AND num_documento <> :num_factura;
					
					--Actualiza maestro de produccion
					UPDATE DP_CL_N3_MAESTROPRODUCCION
							SET STATUS_VEHICLE = '01'
							WHERE ID_ORDER_VP_NSAM = :id_nsam;
							
				END IF;
				
		    ELSE --EXISTE RESERVA DE LA UNIDAD
		    	
		    	IF (lv_clasedocu = 'M') THEN -- TIPO DE DOCUMENTO FACTURA
		    	
				        --SELECT * FROM #TMP_DETALLEASIG;
				        SELECT DEALER_DOCU into dealer_doc FROM #TMP_DOCUMENTOS;
				        SELECT DEALER_ID   into dealer_rev FROM #TMP_DETALLEASIG;
				        SELECT IDORDENDP   into id_dp      FROM #TMP_DETALLEASIG;
				        
				        
				        facturado = 'X';
				        SELECT NUM_DOCUMENTO into num_factura   FROM #TMP_DOCUMENTOS;
		                SELECT FEC_DOCUMENTO into fec_factura   FROM #TMP_DOCUMENTOS;
		                SELECT CANAL_VENTA   into lv_canal      FROM #TMP_DOCUMENTOS;
						SELECT DES_DOCUMENTO into des_documento FROM #TMP_DOCUMENTOS;
				        
						lv_mes := SUBSTRING(periodo, 1, 2);
	                	lv_anio := SUBSTRING(periodo, 4, 4);

				        IF (dealer_doc = dealer_rev) THEN
				            -- SI LA RESERVA CORRESPONDE AL MISMO DEALER SE ACTUALIZA LOS REGISTROS DE FACTURACION
				            
		                
		                	--ACTUALIZA EL DETALLE DE ASIGNACIÓN
				            UPDATE DP_CL_N3_DETALLEASIGNACION
									SET FACTURADO      = :facturado,
									    NUM_FACTURADO  = :num_factura,
									    FEC_FACTURADO  = :fec_factura,
									    OBSERVACION    = 'SE REGISTRA DATOS DE FACTURACIÓN'
									 WHERE ID_ORDER_VP_NSAM = :id_nsam
									 AND IDORDENDP = :id_dp  
									 AND CODESTADOASIGNACION = 1;
							
							INSERT INTO #TMP_RESULTADOPROCESO(ID_ORDER_VP_NSAM, IDORDENDP, CANAL, COUNTRY, DEALER_ID, MES, ANIO, NUM_DOCUMENTO, CLASE_DOCUMENTO, DES_DOCUMENTO, FEC_DOCUMENTO, DATE_CREATION_ORDER_VP_NSAM)
							VALUES (:id_nsam, :id_dp, :lv_canal, :country_vin, :dealer_doc, :lv_mes, :lv_anio, :num_factura, :lv_clasedocu, :des_documento, :fec_factura, :fecha_creacion_nsam);

							--DOCUMENTOS		
				            UPDATE DP_CL_N3_DOCUMENTOS
									SET observacion = 'SE ACTUALIZA LA RESERVA DESDE FACTURACION, ORDEN NSAM: ' || :id_nsam,
									    procesado = 'X'
									WHERE vin = :lv_vin
									AND num_documento = :num_factura;
							
							UPDATE DP_CL_N3_DOCUMENTOS
								SET procesado = 'X'
								WHERE vin = :lv_vin
								AND num_documento <> :num_factura;

								
						    --MAESTRO DE PRODUCCION SE CAMBIO A ESTADO ARCHIVE
				        	UPDATE DP_CL_N3_MAESTROPRODUCCION
								SET STATUS_VEHICLE = '04',
								DEALER_ID = dealer_doc, 
								DATE_ASSIGNMENT = formatted_date,
								CODCANAL = lv_canal
								WHERE ID_ORDER_VP_NSAM = :id_nsam;
								
				        ELSE
				        	-- SI LA FACTURACIÓN CORRESPONDE A OTRO DEALER, SE DEBE CANCELAR LA ASIGNACIÓN EXISTENTE Y CREAR LA NUEVA ASIGNACIÓN
		
				            UPDATE DP_CL_N3_DETALLEASIGNACION
									SET CODESTADOASIGNACION = 5,
									    OBSERVACION         = 'SE CANCELA POR CAMBIO DE DEALER EN FACTURACIÓN'
									 WHERE ID_ORDER_VP_NSAM = :id_nsam
									 AND IDORDENDP = :id_dp;
									 
							num_sec := CEILING(RAND() * 900) + 100;
					        indice_nsam := SUBSTR(id_nsam, LENGTH(:country_vin) + 3);
					        orderId := 'DP' || indice_nsam || num_sec;
					        fecha_actual := CAST(CURRENT_TIMESTAMP AS SECONDDATE);
				    		
				    		SELECT SKU INTO lv_sku
						    FROM DP_CL_N3_SKU_DETAILS WHERE eim = :eim
			                                          AND country = :country_vin;
		                    
		                    lv_mes := SUBSTRING(periodo, 1, 2);
		                	lv_anio := SUBSTRING(periodo, 4, 4);
		                
							--Crea el registro de detalle

					        INSERT INTO DP_CL_N3_DETALLEASIGNACION (IDORDENDP,ID_ORDER_VP_NSAM,COUNTRY,EIM,CODCANAL,SKU,MES,ANIO,DEALER_ID,FECHA_ASIG,USUARIO,CODESTADOASIGNACION,IS_FREEDEMAND0,FECHA_MODIFICACION,OBSERVACION,CODCOLOR,TIPO_ASIG, FACTURADO, NUM_FACTURADO, FEC_FACTURADO)
					        VALUES(:orderId,:id_nsam,:country_vin,:eim, lv_canal,:lv_sku,:lv_mes,:lv_anio,:dealer_doc,:fecha_actual, 'SYNC FACTURA',1,null,:fecha_actual,'Unidad asignada en: '|| :periodo,null,'F', facturado, num_factura, fec_factura);
		    				
							INSERT INTO #TMP_RESULTADOPROCESO(ID_ORDER_VP_NSAM, IDORDENDP, CANAL, COUNTRY, DEALER_ID, MES, ANIO, NUM_DOCUMENTO, CLASE_DOCUMENTO, DES_DOCUMENTO, FEC_DOCUMENTO, DATE_CREATION_ORDER_VP_NSAM)
							VALUES (:id_nsam, :orderId, :lv_canal, :country_vin, :dealer_doc, :lv_mes, :lv_anio, :num_factura, :lv_clasedocu, :des_documento, :fec_factura, :fecha_creacion_nsam);
		    				 
							--Actualiza tabla de documentos como procesado
			    			UPDATE DP_CL_N3_DOCUMENTOS
							SET observacion = 'SE CREA LA RESERVA DESDE FACTURACION, ORDEN NSAM: ' || :id_nsam,
							    procesado = 'X'
							WHERE vin = :lv_vin
							AND num_documento = :num_factura;

							UPDATE DP_CL_N3_DOCUMENTOS
							SET procesado = 'X'
							WHERE vin = :lv_vin
							AND num_documento <> :num_factura;

							
						
							--Actualiza maestro de produccion
							UPDATE DP_CL_N3_MAESTROPRODUCCION
									SET STATUS_VEHICLE = '04',
									DEALER_ID = dealer_doc, 
									DATE_ASSIGNMENT = formatted_date,
									CODCANAL = lv_canal,
									SKU = lv_sku
									WHERE ID_ORDER_VP_NSAM = :id_nsam;
								
				        END IF;
				ELSE
						SELECT IDORDENDP     into id_dp      FROM #TMP_DETALLEASIG;
						SELECT CODCANAL      into id_canal   FROM #TMP_DETALLEASIG;
						SELECT DEALER_ID     into dealer_rev FROM #TMP_DETALLEASIG;

						SELECT NUM_DOCUMENTO into num_factura FROM #TMP_DOCUMENTOS;

						lv_mes := SUBSTRING(periodo, 1, 2);
		                lv_anio := SUBSTRING(periodo, 4, 4);
						
							--ACTUALIZA EL DETALLE DE ASIGNACIÓN
				            UPDATE DP_CL_N3_DETALLEASIGNACION
									SET FACTURADO      = NULL,
									    NUM_FACTURADO  = NULL,
									    FEC_FACTURADO  = NULL,
									    OBSERVACION = 'SE REGISTRA UNIDAD POR NOTA  DE CRÉDITO N° ' || :num_factura
									 WHERE ID_ORDER_VP_NSAM = :id_nsam
									 AND IDORDENDP = :id_dp  
									 AND CODESTADOASIGNACION = 1;

							INSERT INTO #TMP_RESULTADOPROCESO(ID_ORDER_VP_NSAM, IDORDENDP, CANAL, COUNTRY, DEALER_ID, MES, ANIO, NUM_DOCUMENTO, CLASE_DOCUMENTO, DES_DOCUMENTO, FEC_DOCUMENTO, DATE_CREATION_ORDER_VP_NSAM)
							VALUES (:id_nsam, :id_dp, :id_canal, :country_vin, :dealer_rev, :lv_mes, :lv_anio, '', '', '', '', :fecha_creacion_nsam);
									
							--DOCUMENTOS		
				           UPDATE DP_CL_N3_DOCUMENTOS
								SET observacion = 'SE REGISTRA UNIDAD POR NOTA  DE CRÉDITO ',
								    procesado = 'X'
								WHERE vin = :lv_vin
								AND num_documento = :num_factura;
						    
							UPDATE DP_CL_N3_DOCUMENTOS
								SET procesado = 'X'
								WHERE vin = :lv_vin
								AND num_documento <> :num_factura;
									
						    --MAESTRO DE PRODUCCION SE CAMBIO A ESTADO ARCHIVE
				        	UPDATE DP_CL_N3_MAESTROPRODUCCION
								SET STATUS_VEHICLE = '01'
								WHERE ID_ORDER_VP_NSAM = :id_nsam;
								
		        END IF;
		        
		    END IF;
		
		ELSE --SI NO EXISTE EN EL MAESTRO DE PRODUCCIÓN
		    SELECT NUM_DOCUMENTO into lv_documento FROM #TMP_DOCUMENTOS;
		    
		    UPDATE DP_CL_N3_DOCUMENTOS AS MP
				SET 
				observacion = 'VIN NO EXISTE EN EL MAESTRO DE PRODUCCION',
				procesado   = 'X'
				WHERE vin = :lv_vin
				AND num_documento = :lv_documento;

			--SELECT lv_documento AS MSG FROM DUMMY;
			
		END IF;
		
	
	END FOR;
	
	/*IF (totDocu = 0) THEN
		SELECT 'NO EXISTEN REGISTROS PARA PROCESAR' AS MSG FROM DUMMY;
	END IF;*/
	procesados = SELECT * FROM #TMP_RESULTADOPROCESO;

	DROP TABLE #TMP_DOCUMENTOS;
	DROP TABLE #TMP_MAESTRO;
	DROP TABLE #TMP_DETALLEASIG;
	DROP TABLE #TMP_RESULTADOPROCESO;

    message = 'process successfully';
    result = true;
    
	
END;